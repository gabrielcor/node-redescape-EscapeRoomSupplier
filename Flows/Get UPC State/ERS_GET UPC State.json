[
    {
        "id": "7cec459b408f9e65",
        "type": "tab",
        "label": "GET_UPC_State",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0ebb81d8a4618708",
        "type": "link in",
        "z": "7cec459b408f9e65",
        "name": "link in 1",
        "links": [
            "c7c4685c94a69e6f"
        ],
        "x": 165,
        "y": 320,
        "wires": [
            [
                "8138e05905f687ac"
            ]
        ]
    },
    {
        "id": "5e28fca11e776c89",
        "type": "http request",
        "z": "7cec459b408f9e65",
        "name": "Call API on UPC device",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 320,
        "wires": [
            [
                "d21b02c71b5bd77a"
            ]
        ]
    },
    {
        "id": "d21b02c71b5bd77a",
        "type": "rbe",
        "z": "7cec459b408f9e65",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 730,
        "y": 320,
        "wires": [
            [
                "3d92135786d31413"
            ]
        ]
    },
    {
        "id": "8138e05905f687ac",
        "type": "change",
        "z": "7cec459b408f9e65",
        "name": "set msg request",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "deviceUrl",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 320,
        "wires": [
            [
                "5e28fca11e776c89"
            ]
        ]
    },
    {
        "id": "df3c1dacf6fb708e",
        "type": "function",
        "z": "7cec459b408f9e65",
        "name": "Assign values to display panel",
        "func": "var payload = msg.payload; //get payload\nvar id = msg.payload.id; // comes from the device\n\npayload.deviceName = flow.get(\"deviceName\");\npayload.description = flow.get(\"description\");\n\nvar inputStatesString = msg.payload.universal_state.input_states;\nvar decimalValue = parseInt(inputStatesString, 10);\nvar binaryValue = decimalValue.toString(2).padStart(16, '0');\n\npayload.binaryValue = binaryValue;\n\nvar d= new Date();\npayload.time = d.toLocaleTimeString();\nmsg.payload = payload;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 500,
        "wires": [
            [
                "cd2152a91feb61e1"
            ]
        ]
    },
    {
        "id": "3d92135786d31413",
        "type": "json",
        "z": "7cec459b408f9e65",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 870,
        "y": 320,
        "wires": [
            [
                "df3c1dacf6fb708e"
            ]
        ]
    },
    {
        "id": "434e2fc9d9c1a0b4",
        "type": "comment",
        "z": "7cec459b408f9e65",
        "name": "Every tick",
        "info": "",
        "x": 140,
        "y": 280,
        "wires": []
    },
    {
        "id": "2b373cf7867a5518",
        "type": "link in",
        "z": "7cec459b408f9e65",
        "name": "link in 4",
        "links": [
            "442e7bc38dd4c3b7",
            "758310f9eb5818de"
        ],
        "x": 335,
        "y": 100,
        "wires": [
            [
                "17f3273489c1790b"
            ]
        ]
    },
    {
        "id": "17f3273489c1790b",
        "type": "change",
        "z": "7cec459b408f9e65",
        "name": "Initialize target URL & device data",
        "rules": [
            {
                "t": "set",
                "p": "deviceUrl",
                "pt": "flow",
                "to": "http://192.168.5.185?command=state",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "deviceName",
                "pt": "flow",
                "to": "ESP32-UPC-EMUL01",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "description",
                "pt": "flow",
                "to": "Magnet Sensor",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 100,
        "wires": [
            [
                "b4079d6a2dca0996"
            ]
        ]
    },
    {
        "id": "f989d7222c119b8d",
        "type": "comment",
        "z": "7cec459b408f9e65",
        "name": "Always initialize to: http://nnn.nnn.nnn.nnn?command=state // where nnn.... is IP address of UPC device",
        "info": "",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "b4079d6a2dca0996",
        "type": "change",
        "z": "7cec459b408f9e65",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"id\":\"NOT connected\",\"sv\":\"01.01.06\",\"hv\":\"5\",\"puzzle_state\":{\"number_of_steps\":\"10\",\"current_step\":\"10\",\"attempt_number\":\"0\"},\"universal_state\":{\"machine_state\":\"0\",\"output_state\":\"\",\"input_states\":\"65534\",\"overwritten_inputs\":\"0\"},\"message\":{\"type\":\"info\",\"content\":\"OK!\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 100,
        "wires": [
            [
                "df3c1dacf6fb708e"
            ]
        ]
    },
    {
        "id": "9b21d75ed21becaa",
        "type": "catch",
        "z": "7cec459b408f9e65",
        "name": "Ignorar error de llamada a la API",
        "scope": [
            "5e28fca11e776c89"
        ],
        "uncaught": false,
        "x": 650,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "cd2152a91feb61e1",
        "type": "ui_template",
        "z": "7cec459b408f9e65",
        "group": "487ff8a5c1e2834b",
        "name": "",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .led-indicator {\n        width: 10px;\n        height: 10px;\n        border-radius: 50%;\n        margin: 3px;\n    }\n\n    .green {\n        background-color: green;\n    }\n\n    .gray {\n        background-color: gray;\n    }\n    .led-numbers {\n    display: flex;\n    justify-content: space-between;\n    font-size: 9px;\n    margin-top: 3px;\n    margin: 3px;\n    }\n</style>\n<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.deviceName}}</p>\n    </md-card-title-text>\n    <span ng-class=\"msg.payload.universal_state.machine_state=='2' ? 'fa fa-unlock fa-2x' : 'fa fa-lock fa-2x'\"></span>\n</md-card-title>\n\n<md-card-content>\n    <div\n        ng-style=\"{width:'100%',height:'8px','background-color':msg.payload.universal_state.machine_state=='2' ? 'green' : 'red'}\">\n    </div>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n        <br>\n                {{msg.payload.id?msg.payload.id:'Unknown'}}\n                - {{msg.payload.time?msg.payload.time:'Unknown'}}\n        <br>\n    </p>\n    \n    <div style=\"display: flex; justify-content: center;\">\n        <div id=\"led-container\" style=\"display: flex; justify-content: center;\"></div>\n    </div>\n    <div class=\"led-numbers\">\n        <span>1</span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span>16</span>\n    </div>\n    <script>\n    ;(function(scope) {\n    \n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var ledContainer = document.getElementById('led-container');\n        ledContainer.innerHTML = '';\n        var binaryValue =  msg.payload.binaryValue;\n        for (var i = binaryValue.length-1; i >=0 ; i--) \n        { var led=document.createElement('div');\n              led.classList.add('led-indicator'); \n              if (binaryValue[i]==='0' )\n                 { led.classList.add('green'); } \n              else \n                 { led.classList.add('gray'); } \n            ledContainer.appendChild(led); \n        }\n    });\n    })(scope);\n    </script>\n</md-card-content>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "487ff8a5c1e2834b",
        "type": "ui_group",
        "name": "ESRS-GC",
        "tab": "7d66f574.b154cc",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7d66f574.b154cc",
        "type": "ui_tab",
        "name": "Devices",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    }
]