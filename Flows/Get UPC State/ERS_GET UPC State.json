[
    {
        "id": "f5262a52945eb598",
        "type": "tab",
        "label": "GET_UPC_State",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a85d49f603fb7fdc",
        "type": "link in",
        "z": "f5262a52945eb598",
        "name": "link in 1",
        "links": [
            "c7c4685c94a69e6f"
        ],
        "x": 165,
        "y": 320,
        "wires": [
            [
                "927099632467fc4d"
            ]
        ]
    },
    {
        "id": "49397b3931cd4a49",
        "type": "http request",
        "z": "f5262a52945eb598",
        "name": "Call API on UPC device",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 320,
        "wires": [
            [
                "cf213e42e0132403"
            ]
        ]
    },
    {
        "id": "cf213e42e0132403",
        "type": "rbe",
        "z": "f5262a52945eb598",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 730,
        "y": 320,
        "wires": [
            [
                "15553aeb1e9ebd23"
            ]
        ]
    },
    {
        "id": "927099632467fc4d",
        "type": "change",
        "z": "f5262a52945eb598",
        "name": "set msg request",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "deviceUrl",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 320,
        "wires": [
            [
                "49397b3931cd4a49"
            ]
        ]
    },
    {
        "id": "7e26ff55c2c5854d",
        "type": "function",
        "z": "f5262a52945eb598",
        "name": "Assign values to display panel",
        "func": "var payload = msg.payload; //get payload\nvar id = msg.payload.id; // comes from the device\n\npayload.deviceName = flow.get(\"deviceName\");\npayload.description = flow.get(\"description\");\n\nvar inputStatesString = msg.payload.universal_state.input_states;\nvar decimalValue = parseInt(inputStatesString, 10);\nvar binaryValue = decimalValue.toString(2).padStart(16, '0');\n\npayload.binaryValue = binaryValue;\n\nvar d= new Date();\npayload.time = d.toLocaleTimeString();\nmsg.payload = payload;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 500,
        "wires": [
            [
                "0618d03cf5d85083",
                "46146027ce098772"
            ]
        ]
    },
    {
        "id": "15553aeb1e9ebd23",
        "type": "json",
        "z": "f5262a52945eb598",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 870,
        "y": 320,
        "wires": [
            [
                "7e26ff55c2c5854d"
            ]
        ]
    },
    {
        "id": "4653cd44abc0b299",
        "type": "comment",
        "z": "f5262a52945eb598",
        "name": "Every tick",
        "info": "",
        "x": 140,
        "y": 280,
        "wires": []
    },
    {
        "id": "9ac50b7a84f0a17f",
        "type": "link in",
        "z": "f5262a52945eb598",
        "name": "link in 4",
        "links": [
            "442e7bc38dd4c3b7",
            "758310f9eb5818de"
        ],
        "x": 335,
        "y": 100,
        "wires": [
            [
                "9c4ee58623de4087"
            ]
        ]
    },
    {
        "id": "9c4ee58623de4087",
        "type": "change",
        "z": "f5262a52945eb598",
        "name": "Initialize target URL & device data",
        "rules": [
            {
                "t": "set",
                "p": "deviceUrl",
                "pt": "flow",
                "to": "http://192.168.1.124?command=state",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "deviceName",
                "pt": "flow",
                "to": "REAL UPC",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "description",
                "pt": "flow",
                "to": "Magnet Sensor 2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 100,
        "wires": [
            [
                "94901b7e08556112"
            ]
        ]
    },
    {
        "id": "34614755af8a50dc",
        "type": "comment",
        "z": "f5262a52945eb598",
        "name": "Always initialize to: http://nnn.nnn.nnn.nnn?command=state // where nnn.... is IP address of UPC device",
        "info": "",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "94901b7e08556112",
        "type": "change",
        "z": "f5262a52945eb598",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"id\":\"NOT connected\",\"sv\":\"01.01.06\",\"hv\":\"5\",\"puzzle_state\":{\"number_of_steps\":\"10\",\"current_step\":\"10\",\"attempt_number\":\"0\"},\"universal_state\":{\"machine_state\":\"0\",\"output_state\":\"\",\"input_states\":\"65534\",\"overwritten_inputs\":\"0\"},\"message\":{\"type\":\"info\",\"content\":\"OK!\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 100,
        "wires": [
            [
                "7e26ff55c2c5854d"
            ]
        ]
    },
    {
        "id": "53df238b8fd57e4f",
        "type": "catch",
        "z": "f5262a52945eb598",
        "name": "Ignorar error de llamada a la API",
        "scope": [
            "49397b3931cd4a49"
        ],
        "uncaught": false,
        "x": 650,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "0618d03cf5d85083",
        "type": "debug",
        "z": "f5262a52945eb598",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 400,
        "wires": []
    },
    {
        "id": "46146027ce098772",
        "type": "ui_template",
        "z": "f5262a52945eb598",
        "group": "487ff8a5c1e2834b",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .led-indicator {\n        width: 10px;\n        height: 10px;\n        border-radius: 50%;\n        margin: 3px;\n    }\n\n    .green {\n        background-color: green;\n    }\n\n    .gray {\n        background-color: gray;\n    }\n\n    .led-numbers {\n        display: flex;\n        justify-content: space-between;\n        font-size: 9px;\n        margin-top: 3px;\n        margin: 3px;\n    }\n</style>\n<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.deviceName}}</p>\n    </md-card-title-text>\n    <span ng-class=\"msg.payload.universal_state.machine_state=='2' ? 'fa fa-unlock fa-2x' : 'fa fa-lock fa-2x'\"></span>\n</md-card-title>\n\n<md-card-content>\n    <div\n        ng-style=\"{width:'100%',height:'8px','background-color':msg.payload.universal_state.machine_state=='2' ? 'green' : 'red'}\">\n    </div>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n        <br>\n                {{msg.payload.id?msg.payload.id:'Unknown'}}\n                - {{msg.payload.time?msg.payload.time:'Unknown'}}\n        <br>\n    </p>\n        <br>{{msg.payload.binaryValue}}<br>\n    <div style=\"display: flex; justify-content: center;\">\n        <div id=\"{{msg.payload.id}}\" style=\"display: flex; justify-content: center;\"></div>\n    </div>\n    <div class=\"led-numbers\">\n        <span>1</span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span>16</span>\n    </div>\n\n</md-card-content>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 860,
        "y": 560,
        "wires": [
            [
                "e2c8ccbf9f4dd6ad"
            ]
        ]
    },
    {
        "id": "e2c8ccbf9f4dd6ad",
        "type": "ui_template",
        "z": "f5262a52945eb598",
        "group": "487ff8a5c1e2834b",
        "name": "",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<md-card-content>\n    <script>\n        ;(function(scope) {\n    \n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var ledContainer = document.getElementById(msg.payload.id);\n        ledContainer.innerHTML = '';\n        var binaryValue =  msg.payload.binaryValue;\n        for (var i = binaryValue.length-1; i >=0 ; i--) \n        { var led=document.createElement('div');\n              led.classList.add('led-indicator'); \n              if (binaryValue[i]==='0' )\n                 { led.classList.add('green'); } \n              else \n                 { led.classList.add('gray'); } \n            ledContainer.appendChild(led); \n        }\n    });\n    })(scope);\n    </script>\n</md-card-content>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 920,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "487ff8a5c1e2834b",
        "type": "ui_group",
        "name": "ESRS-GC",
        "tab": "7d66f574.b154cc",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7d66f574.b154cc",
        "type": "ui_tab",
        "name": "Devices",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    }
]